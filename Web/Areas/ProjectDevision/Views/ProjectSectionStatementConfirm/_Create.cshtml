@model ViewModels.ProjectDevision.ProjectSectionStatementConfirmViewModel.CreateProjectSectionStatementConfirmViewModel

<form id="frm-ProjectSectionStatementConfirm" class="operationform" method="post">
    @{
        if (ViewBag.error != null)
        {
            <div class="col-lg-12">
                <div id="ErrorAlert" class="alert alert-danger" role="alert">
                    <button type="button" class="close" id="AlertClose"><span aria-hidden="true">&times;</span></button>
                    <span>@ViewBag.error</span>
                </div>
            </div>

            <script>
                $('#ErrorAlert').show().delay(4000).slideUp(300);
            </script>
        }
    }
    @Html.HiddenFor(model => model.ProjectSectionStatementConfirm.Id, new { Value = (@ViewBag.Id != null) ? @ViewBag.Id : Model.ProjectSectionStatementConfirm.Id, @id = "ProjectSectionStatementConfirmId" })
    @Html.HiddenFor(model => model.ProjectSectionStatementConfirm.ProjectSectionStatementId)

    <div class="form-group col-lg-4 col-md-6">
        @Html.LabelFor(model => model.ProjectSectionStatementConfirm.FinalOpinionId, new { @class="label-txt" })
        @Html.ValidationMessageFor(model => model.ProjectSectionStatementConfirm.FinalOpinionId, String.Empty, new { @class = "label-validation" })
        @Html.DropDownListFor(model => model.ProjectSectionStatementConfirm.FinalOpinionId, new SelectList(Model.Opinions, "Id", "Title"), new { @class="form-control txtbox" })
    </div>

    <div class="form-group col-lg-4 col-md-6">
        @Html.LabelFor(model => model.ProjectSectionStatementConfirm.Price, new { @class = "label-txt" })
        @Html.ValidationMessageFor(model => model.ProjectSectionStatementConfirm.Price, String.Empty, new { @class = "label-validation" })
        @Html.TextBoxFor(model => model.ProjectSectionStatementConfirm.Price, new { @class = "form-control txtbox numeric input-price" })
    </div>

    <div class="form-group col-lg-4 col-md-6">
        @Html.LabelFor(model => model.ProjectSectionStatementConfirm.Date, new { @class = "label-txt" })
        @Html.ValidationMessageFor(model => model.ProjectSectionStatementConfirm.Date, String.Empty, new { @class = "label-validation" })
        @Html.TextBoxFor(model => model.ProjectSectionStatementConfirm.Date, new { @class = "form-control txtbox" })
    </div>

    <div class="clear"></div>

    <div class="form-group col-lg-8">
        @Html.LabelFor(model => model.ProjectSectionStatementConfirm.Description, new { @class="label-txt"})
        @Html.ValidationMessageFor(model => model.ProjectSectionStatementConfirm.Description, String.Empty, new { @class="label-validation" })
        @Html.TextBoxFor(model => model.ProjectSectionStatementConfirm.Description, new { @class="form-control txtbox persian"})
    </div>


    <div class="clear"></div>
    <div class="form-group col-lg-8">
        <button type="submit" id="btnSaveProjectSectionStatementConfirm" class="btn btn-success"><span class="glyphicon glyphicon-ok" style="float:right;"></span>ذخیره</button>
        <button type="button" id="btnNewProjectSectionStatementConfirm" class="btn btn-info btnNew"><span class="glyphicon glyphicon-file" style="float:right;"></span>جدید</button>
    </div>
</form>

<script>
    SepratePrice('#ProjectSectionStatementConfirm_Price');
</script>